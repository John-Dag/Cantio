{"version":3,"sources":["utils/helpers.js","utils/api.js","components/redirect.component.js","components/player.component.js","components/topartists.component.js","components/toptracks.component.js","components/profile.component.js","components/recentlyplayed.component.js","components/tracksbydecade.component.js","components/collage.component.js","App.js","reportWebVitals.js","index.js"],"names":["setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","access_token","error","console","log","get","url","a","result","data","Redirect","this","props","history","location","setItem","hash","slice","split","reduce","prev","curr","title","value","window","expirationTime","Date","getTime","expires_in","stringify","push","React","Component","Player","getResult","playerResult","setState","item","is_playing","progress_ms","state","token","album","images","name","artists","duration_ms","prevProps","currentlyPlaying","player","isValidSession","className","id","class","src","alt","to","TopArtists","artistCard","topArtists","map","href","external_urls","data-mdb","TopTracks","topTracks","track","Profile","profile","length","display_name","followers","total","RecentlyPlayed","recentlyPlayed","TracksByDecade","sortedTracks","sort","b","parseInt","release_date","getFullYear","trackYears","trackYear","Math","floor","includes","Collage","combinedArr","concat","i","j","random","temp","randomizedArtistsTracks","randomizeArtistsTracks","redirect","encodeURIComponent","process","requestHref","join","App","getTopArtists","topArtistsResult","items","topArtistsArr","Object","keys","getTopTracks","topTracksResult","topTracksArr","getUserProfile","profileResult","getCurrentlyPlaying","currentlyPlayingResult","getRecentlyPlayed","recentlyPlayedResult","recentlyPlayedArr","expiration","isValid","setInterval","loginButton","type","basename","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5381f68.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS';\r\nexport const SET_ARTISTS = 'SET_ARTISTS';\r\n\r\nexport const getParamValues = (url) => {\r\n    return url\r\n        .slice(1)\r\n        .split('&')\r\n        .reduce((prev, curr) => {\r\n            const [title, value] = curr.split('=');\r\n            prev[title] = value;\r\n            window.location.hash = \"\";\r\n            \r\n            return prev;\r\n        }, {});\r\n};\r\n\r\nexport const setAuthHeader = () => {\r\n    try {\r\n        const params = JSON.parse(localStorage.getItem('params'));\r\n\r\n        if (params) {\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${params.access_token}`;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log('Error setting auth', error);\r\n    }\r\n};","import axios from 'axios';\r\nimport { setAuthHeader } from './helpers';\r\n\r\nexport const get = async (url, params) => {\r\n    setAuthHeader();\r\n    const result = await axios.get(url, params);\r\n    \r\n    return result.data;\r\n}\r\n\r\nexport const post = async (url, params) => {\r\n    setAuthHeader();\r\n    const result = await axios.post(url, params);\r\n\r\n    return result.data;\r\n}","import React, { Component } from 'react';\r\nimport { getParamValues } from '../utils/helpers';\r\n\r\nexport default class Redirect extends React.Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {\r\n            history,\r\n            location,\r\n        } = this.props;\r\n\r\n        localStorage.setItem('is_logged_in', false);\r\n\r\n        try {\r\n            const access_token = getParamValues(location.hash);\r\n            const expirationTime = new Date().getTime() + access_token.expires_in * 1000;\r\n\r\n            localStorage.setItem('params', JSON.stringify(access_token));\r\n            localStorage.setItem('expiration_time', expirationTime);\r\n        }\r\n        catch (error) {\r\n            history.push('/');\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { get, post } from '../utils/api';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../style/stats.css\";\r\n\r\nexport default class Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            token: null,\r\n            item: {\r\n                album: {\r\n                    images: [{ url: \"\" }]\r\n                },\r\n                name: \"\",\r\n                artists: [{ name: \"\" }],\r\n                duration_ms: 0,\r\n            },\r\n            is_playing: \"Paused\",\r\n            progress_ms: 0\r\n        };\r\n    }\r\n\r\n    getResult = async () => {\r\n        try {\r\n            const API_PLAYER_URL = \"https://api.spotify.com/v1/me/player\";\r\n            const playerResult = await get(API_PLAYER_URL);\r\n\r\n            this.setState({\r\n                item: playerResult.item,\r\n                is_playing: playerResult.is_playing,\r\n                progress_ms: playerResult.progress_ms,\r\n            });\r\n        } \r\n        catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getResult();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.currentlyPlaying !== prevProps.currentlyPlaying) {\r\n            this.getResult();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let player;\r\n\r\n        if (!this.props.isValidSession) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        else if (this.state.item) {\r\n            player =             \r\n            <div>\r\n                <div className=\"collapse show\" id=\"now-playing\">\r\n                <div className=\"now-playing-album-art card\">\r\n                    <img class=\"card-img-top\" src={this.state.item.album.images[0].url} alt=\"Card image cap\"/>\r\n                    <div className=\"card-body\">\r\n                        {this.state.item.name}\r\n                    </div>\r\n                    <div className=\"card-text\">\r\n                        {this.state.item.artists[0].name}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        }\r\n        else {\r\n            player = null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {player}\r\n            </div>\r\n          );\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../style/stats.css\";\r\n\r\nexport default class TopArtists extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        let artistCard;\r\n\r\n        if (!this.props.isValidSession) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        else if (this.props.topArtists) {\r\n            artistCard =             \r\n            <div className=\"top-artists-wrapper\">\r\n                <section class=\"top-artists-section\">\r\n                    <h1>Top Artists</h1>\r\n                    {this.props.topArtists.map(topArtists => (\r\n                        <a href={topArtists.external_urls['spotify']}>\r\n                            <div className=\"top-artists shadow card\">\r\n                                <img class=\"card-img top-artists-img\" data-mdb src={topArtists.images[0]['url']}/>\r\n                                <div className=\"card-body\">\r\n                                    {topArtists.name}\r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    ))}\r\n                </section>\r\n            </div>\r\n        }\r\n        else {\r\n            artistCard =\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {artistCard}\r\n            </div>\r\n          );\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../style/stats.css\";\r\n\r\nexport default class TopTracks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        let topTracks;\r\n\r\n        if (!this.props.isValidSession) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        else if (this.props.topTracks) {\r\n            topTracks = \r\n            <div className=\"top-tracks-wrapper\">\r\n                <section class=\"top-tracks-section\">\r\n                    <h1>Top Tracks</h1>\r\n                    {this.props.topTracks.map(track => (\r\n                        <a href={track.external_urls['spotify']}>\r\n                            <div className=\"top-tracks shadow card\">\r\n                                <img class=\"card-img\" src={track.album.images[0]['url']}/>\r\n                                <div className=\"card-body\">\r\n                                    {track.name}\r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    ))}\r\n                </section>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {topTracks}\r\n            </div>\r\n          );\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../style/stats.css\";\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let profile;\r\n\r\n        if (!this.props.isValidSession) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        else if ((this.props.profile) && (this.props.profile.images.length > 0)) {\r\n            profile = \r\n            <section class=\"profile-section\">\r\n                <div className=\"profile-wrapper\">\r\n                    <div className=\"card profile\">\r\n                        <img className=\"card-img\" src={this.props.profile.images[0]['url']}/>\r\n                        <div className=\"card-body profile-card-body\">\r\n                            <h5 class=\"card-title\">\r\n                                {this.props.profile.display_name}\r\n                            </h5>\r\n                            <ul class=\"list-group list-group-flush\">\r\n                                <li class=\"list-group-item\">{this.props.profile.followers.total} Followers</li>\r\n                                <a class=\"no-style\" href={this.props.profile.external_urls['spotify']}>\r\n                                    <li class=\"list-group-item\">Profile</li>\r\n                                </a>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        }\r\n        else if (this.props.profile) {\r\n            profile =\r\n            <section class=\"profile-section\">\r\n                <div className=\"profile-wrapper\">\r\n                    <div className=\"card profile\">\r\n                        <div className=\"card-body profile-card-body\">\r\n                            <h5 class=\"card-title\">\r\n                                {this.props.profile.display_name}\r\n                            </h5>\r\n                            <ul class=\"list-group list-group-flush\">\r\n                                <li class=\"list-group-item\">{this.props.profile.followers.total} Followers</li>\r\n                                <a class=\"no-style\" href={this.props.profile.external_urls['spotify']}>\r\n                                    <li class=\"list-group-item\">Profile</li>\r\n                                </a>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {profile}\r\n            </div>\r\n          );\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../style/stats.css\";\r\n\r\nexport default class RecentlyPlayed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        let recentlyPlayed = this.props.recentlyPlayed;\r\n\r\n        if (!this.props.isValidSession) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        else if (this.props.recentlyPlayed) {\r\n            recentlyPlayed = \r\n            <div className=\"recently-played-wrapper\">\r\n                <section class=\"recently-played-section\">\r\n                <h1>Recently Played</h1>\r\n                    {this.props.recentlyPlayed.map(track => (\r\n                        <a href={track.track.external_urls['spotify']}>\r\n                            <div className=\"recently-played shadow card\">\r\n                                <img class=\"card-img recently-played-img\" src={track.track.album.images[0]['url']}/>\r\n                                <div className=\"card-body\">\r\n                                    {track.track.name}\r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    ))}\r\n                </section>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {recentlyPlayed}\r\n            </div>\r\n          );\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../style/stats.css\";\r\n\r\nexport default class TracksByDecade extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        let topTracks;\r\n\r\n        if (!this.props.isValidSession) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        else if (this.props.topTracks) {\r\n            let sortedTracks = this.props.topTracks.sort((a, b) => parseInt(new Date(a.album.release_date).getFullYear()) - \r\n                                                                   parseInt(new Date(b.album.release_date).getFullYear()));\r\n            let trackYears = [];\r\n\r\n            topTracks = \r\n            <div className=\"tracks-by-decade-wrapper\">\r\n                <section class=\"tracks-by-decade-section\">\r\n                    {sortedTracks.map(track => {\r\n                        let trackYear = Math.floor(parseInt(new Date(track.album.release_date).getFullYear() / 10) * 10);\r\n\r\n                        if (!trackYears.includes(trackYear)) {\r\n                            trackYears.push(trackYear);\r\n\r\n                            return (\r\n                                <span>\r\n                                    <h1>{trackYear}</h1>\r\n                                    <a href={track.external_urls['spotify']}>\r\n                                        <div className=\"tracks-by-decade shadow card\">\r\n                                            <img class=\"card-img\" src={track.album.images[0]['url']}/>\r\n                                            <div className=\"card-body\">\r\n                                                {track.name}\r\n                                            </div>\r\n                                        </div>\r\n                                    </a>\r\n                                </span>\r\n                            );\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <a href={track.external_urls['spotify']}>\r\n                                    <div className=\"tracks-by-decade shadow card\">\r\n                                        <img class=\"card-img\" src={track.album.images[0]['url']}/>\r\n                                        <div className=\"card-body\">\r\n                                            {track.name}\r\n                                        </div>\r\n                                    </div>\r\n                                </a>\r\n                            );\r\n                        }})}\r\n                </section>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {topTracks}\r\n            </div>\r\n          );\r\n        }\r\n    }","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../style/stats.css\";\r\n\r\nexport default class Collage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    randomizeArtistsTracks() {\r\n        let combinedArr = this.props.topTracks.concat(this.props.topArtists);\r\n\r\n        for (let i = combinedArr.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            const temp = combinedArr[i];\r\n            combinedArr[i] = combinedArr[j];\r\n            combinedArr[j] = temp;\r\n        }\r\n\r\n        return combinedArr;\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        let topTracks;\r\n\r\n        if (!this.props.isValidSession) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        else if (this.props.topTracks) {\r\n            let randomizedArtistsTracks = this.randomizeArtistsTracks();\r\n\r\n            topTracks = \r\n            <div className=\"collage-wrapper\">\r\n                <section class=\"collage-section\">\r\n                    {randomizedArtistsTracks.map(track => {\r\n                        if (track.album) {\r\n                            return (\r\n                                <a href={track.external_urls['spotify']}>\r\n                                    <div className=\"collage shadow card\">\r\n                                        <img class=\"card-img\" src={track.album.images[0]['url']}/>\r\n                                    </div>\r\n                                </a>\r\n                            );\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <a href={track.external_urls['spotify']}>\r\n                                <div className=\"collage shadow card\">\r\n                                    <img class=\"card-img\" src={track.images[0]['url']}/>\r\n                                </div>\r\n                            </a>\r\n                            )\r\n                        }\r\n                    })}\r\n                </section>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {topTracks}\r\n            </div>\r\n          );\r\n        }\r\n    }","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Draggable from 'react-draggable';\nimport { get } from './utils/api';\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport Redirect from \"./components/redirect.component\";\nimport Player from \"./components/player.component\";\nimport TopArtists from \"./components/topartists.component\";\nimport TopTracks from \"./components/toptracks.component\";\nimport Profile from \"./components/profile.component\";\nimport RecentlyPlayed from \"./components/recentlyplayed.component\";\nimport TracksByDecade from \"./components/tracksbydecade.component\";\nimport Collage from \"./components/collage.component\";\n\nconst scopes = [\n    \"user-read-currently-playing\",\n    \"user-read-playback-state\",\n    \"user-top-read\",\n    \"user-read-recently-played\",\n];\n\nconst redirect = encodeURIComponent(`${process.env.REACT_APP_REDIRECT_URL}`);\nconst requestHref = `${process.env.REACT_APP_AUTHORIZE_URL}?client_id=${process.env.REACT_APP_CLIENT_ID}&redirect_uri=` + redirect`` +\n                    `&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            expirationTime: '0',\n            isValidSession: false,\n            topArtists: null,\n            topTracks: null,\n            profile: null,\n            currentlyPlaying: null,\n            recentlyPlayed: null\n        };\n    }\n\n    isValidSession = () => {\n        const currentTime = new Date().getTime();\n        const expirationTime = localStorage.getItem('expiration_time');\n        const isValid = currentTime < expirationTime;\n\n        return isValid;\n    }\n\n    getTopArtists = async () => {\n        try {        \n            const API_TOP_ARTISTS_URL = \"https://api.spotify.com/v1/me/top/artists\";\n            const topArtistsResult = await get(API_TOP_ARTISTS_URL);\n\n            this.setState({\n                topArtists: topArtistsResult.items\n            })\n\n            const topArtistsArr = [];\n            Object.keys(this.state.topArtists).map(i => topArtistsArr.push(this.state.topArtists[i]));\n            this.setState({topArtists: topArtistsArr});\n        }\n        catch (error) {\n            console.log('Top artists request error', error);\n        }\n    }\n\n    getTopTracks = async () => {\n        try {\n            const API_TOP_TRACKS_URL = \"https://api.spotify.com/v1/me/top/tracks\";\n            const topTracksResult = await get(API_TOP_TRACKS_URL);\n\n            this.setState({\n                topTracks: topTracksResult.items\n            })\n\n            const topTracksArr = [];\n            Object.keys(this.state.topTracks).map(i => topTracksArr.push(this.state.topTracks[i]));\n            this.setState({topTracks: topTracksArr});\n        }\n        catch (error) {\n            console.log('Top tracks request error', error);\n        }\n    }\n\n    getUserProfile = async () => {\n        try {\n            const API_PROFILE_URL = \"https://api.spotify.com/v1/me\";\n            const profileResult = await get(API_PROFILE_URL);\n\n            this.setState({\n                profile: profileResult\n            })\n        }\n        catch (error) {\n            console.log('Profile request error', error);\n        }\n    }\n\n    getCurrentlyPlaying = async () => {\n        try {\n            const API_CURRENTLY_PLAYING_URL = \"https://api.spotify.com/v1/me/player/currently-playing\";\n            const currentlyPlayingResult = await get(API_CURRENTLY_PLAYING_URL);\n            \n            this.setState({\n                currentlyPlaying: currentlyPlayingResult\n            })\n        }\n        catch (error) {\n            console.log('Currently playing request error.', error);\n        }\n    }\n\n    getRecentlyPlayed = async () => {\n        try {\n            const API_RECENTLY_PLAYED_URL = \"https://api.spotify.com/v1/me/player/recently-played\";\n            const recentlyPlayedResult = await get(API_RECENTLY_PLAYED_URL);\n\n            this.setState({\n                recentlyPlayed: recentlyPlayedResult.items\n            })\n\n            const recentlyPlayedArr = [];\n            Object.keys(this.state.recentlyPlayed).map(i => recentlyPlayedArr.push(this.state.recentlyPlayed[i]));\n            this.setState({recentlyPlayed: recentlyPlayedArr});\n        }\n        catch (error) {\n            console.log('Recently played request error.', error);\n        }\n    }\n\n    componentDidMount() {\n        let expiration;\n\n        try {\n            expiration = JSON.parse(localStorage.getItem('expiration_time'));\n        }\n        catch (error) {\n            expiration = '0';\n        }\n\n        this.setState({expirationTime: expiration});\n        const isValid = this.isValidSession();\n        this.setState({isValidSession: isValid});\n\n        if (isValid) {\n            localStorage.setItem('is_logged_in', true);\n        }\n        else {\n            localStorage.setItem('is_logged_in', false);\n        }\n\n        this.getTopTracks();\n        this.getTopArtists();\n        this.getUserProfile();\n        this.getCurrentlyPlaying();\n        this.getRecentlyPlayed();\n\n        if (isValid) {\n            setInterval(()=> this.getCurrentlyPlaying(), 1000);\n        }\n    }\n\n    render() {\n        let player, profile, loginButton;\n\n        loginButton = \n        <a href={requestHref}>\n            <button type=\"button\" class=\"btn btn-primary btn-success navbar-btn\">Login to Spotify</button>\n        </a>\n\n        if (this.state.isValidSession) {\n            player = \n                <div>\n                    <Player isValidSession={this.isValidSession} currentlyPlaying={this.state.currentlyPlaying}>\n                    </Player>\n                </div>\n\n            profile =\n                <div className=\"text-center\">\n                    <Profile isValidSession={this.isValidSession} profile={this.state.profile}>\n                    </Profile>\n                </div>\n        }\n        \n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <div className=\"container-fluid\">\n                    <nav className=\"navbar navbar-expand-lg navbar-inner navbar-dark bg-dark\">\n                        <Link to=\"/\" className=\"navbar-brand\">Cantio</Link>\n                        <div className=\"collpase navbar-collapse\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"navbar-item dropdown\">\n                                    <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarStats\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        Stats\n                                    </a>\n                                    <div class=\"dropdown-menu\" aria-labelledby=\"navbarStats\">\n                                        <Link to=\"/topartists\" class=\"dropdown-item\" href=\"#\">Top Artists</Link>\n                                        <Link to=\"/toptracks\" className=\"dropdown-item\" href=\"#\">Top Tracks</Link>\n                                        <Link to=\"/recentlyplayed\" className=\"dropdown-item\" href=\"#\">Recently Played</Link>\n                                    </div>\n                                </li>\n                                <li className=\"navbar-item\">\n                                    <Link to=\"/tracksbydecade\" className=\"nav-link\">Top Tracks by Decade</Link>\n                                </li>\n                                <li className=\"navbar-item\">\n                                    <Link to=\"/collage\" className=\"nav-link\">Collage</Link>\n                                </li>\n                            </ul>\n                            {loginButton}\n                        </div>\n                    </nav>\n                    <div>\n                        {profile}\n                    </div>\n                    <Draggable>\n                        <div>\n                            {player}\n                        </div>\n                    </Draggable>\n                    <Route path='/redirect' component={Redirect} />\n                    <Route path=\"/toptracks\" \n                                 render={(props) => (\n                                    <TopTracks\n                                    isValidSession={this.state.isValidSession} topTracks={this.state.topTracks} \n                                    {...props} />\n                                 )}\n                    />\n                    <Route path=\"/topartists\" \n                                 render={(props) => (\n                                    <TopArtists\n                                    isValidSession={this.state.isValidSession} topArtists={this.state.topArtists} \n                                    {...props} />\n                                 )}\n                    />\n                    <Route path=\"/recentlyplayed\" \n                                 render={(props) => (\n                                    <RecentlyPlayed\n                                    isValidSession={this.state.isValidSession} recentlyPlayed={this.state.recentlyPlayed} \n                                    {...props} />\n                                 )}\n                    />\n                    <Route path=\"/tracksbydecade\"\n                                 render={(props) => (\n                                    <TracksByDecade\n                                    isValidSession={this.state.isValidSession} topTracks={this.state.topTracks}\n                                    {...props} />\n                                 )}\n                    />\n                    <Route path=\"/collage\"\n                                 render={(props) => (\n                                     <Collage\n                                     isValidSession={this.state.isValidSession} topTracks={this.state.topTracks} topArtists={this.state.topArtists}\n                                     {...props} />\n                                 )}\n                    />\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}